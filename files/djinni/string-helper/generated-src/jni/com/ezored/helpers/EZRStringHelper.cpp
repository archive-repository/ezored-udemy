// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from proj.djinni

#include "com/ezored/helpers/EZRStringHelper.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

EZRStringHelper::EZRStringHelper() : ::djinni::JniInterface<::ezored::helpers::StringHelper, EZRStringHelper>("com/ezored/helpers/StringHelper$CppProxy") {}

EZRStringHelper::~EZRStringHelper() = default;


CJNIEXPORT void JNICALL Java_com_ezored_helpers_StringHelper_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::ezored::helpers::StringHelper>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jstring JNICALL Java_com_ezored_helpers_StringHelper_00024CppProxy_trim(JNIEnv* jniEnv, jobject /*this*/, jstring j_value)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ezored::helpers::StringHelper::trim(::djinni::String::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_com_ezored_helpers_StringHelper_00024CppProxy_leftTrim(JNIEnv* jniEnv, jobject /*this*/, jstring j_value)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ezored::helpers::StringHelper::leftTrim(::djinni::String::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_com_ezored_helpers_StringHelper_00024CppProxy_rightTrim(JNIEnv* jniEnv, jobject /*this*/, jstring j_value)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ezored::helpers::StringHelper::rightTrim(::djinni::String::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_com_ezored_helpers_StringHelper_00024CppProxy_toLower(JNIEnv* jniEnv, jobject /*this*/, jstring j_value)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ezored::helpers::StringHelper::toLower(::djinni::String::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_com_ezored_helpers_StringHelper_00024CppProxy_toUpper(JNIEnv* jniEnv, jobject /*this*/, jstring j_value)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ezored::helpers::StringHelper::toUpper(::djinni::String::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_com_ezored_helpers_StringHelper_00024CppProxy_split(JNIEnv* jniEnv, jobject /*this*/, jstring j_text, jstring j_sep, jboolean j_trimEmpty)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ezored::helpers::StringHelper::split(::djinni::String::toCpp(jniEnv, j_text),
                                                        ::djinni::String::toCpp(jniEnv, j_sep),
                                                        ::djinni::Bool::toCpp(jniEnv, j_trimEmpty));
        return ::djinni::release(::djinni::List<::djinni::String>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
