shared_data_platform_service = interface +j +o {

    set_string(key: string, value: string);
    set_integer(key: string, value: i32);
    set_long(key: string, value: i64);
    set_bool(key: string, value: bool);
    set_float(key: string, value: f32);
    set_double(key: string, value: f64);

    get_string(key: string): string;
    get_integer(key: string): i32;
    get_long(key: string): i64;
    get_bool(key: string): bool;
    get_float(key: string): f32;
    get_double(key: string): f64;

    get_string_with_default_value(key: string, default_value: string): string;
    get_integer_with_default_value(key: string, default_value: i32): i32;
    get_long_with_default_value(key: string, default_value: i64): i64;
    get_bool_with_default_value(key: string, default_value: bool): bool;
    get_float_with_default_value(key: string, default_value: f32): f32;
    get_double_with_default_value(key: string, default_value: f64): f64;

    has(key: string): bool;
    remove(key: string);
    clear();

    save(async: bool, auto_finish: bool);
    save_async();
    save_sync();
    start(group_name: string);
    finish();

}

shared_data = interface +c {

    static shared(): shared_data;
    set_platform_service(ps: shared_data_platform_service);
    get_platform_service(): shared_data_platform_service;
    has_platform_service(): bool;

    set_string(key: string, value: string);
    set_integer(key: string, value: i32);
    set_long(key: string, value: i64);
    set_bool(key: string, value: bool);
    set_float(key: string, value: f32);
    set_double(key: string, value: f64);

    get_string(key: string): string;
    get_integer(key: string): i32;
    get_long(key: string): i64;
    get_bool(key: string): bool;
    get_float(key: string): f32;
    get_double(key: string): f64;

    get_string_with_default_value(key: string, default_value: string): string;
    get_integer_with_default_value(key: string, default_value: i32): i32;
    get_long_with_default_value(key: string, default_value: i64): i64;
    get_bool_with_default_value(key: string, default_value: bool): bool;
    get_float_with_default_value(key: string, default_value: f32): f32;
    get_double_with_default_value(key: string, default_value: f64): f64;

    has(key: string): bool;
    remove(key: string);
    clear();

    save(async: bool, auto_finish: bool);
    save_async();
    save_sync();
    start(group_name: string);
    finish();

}
